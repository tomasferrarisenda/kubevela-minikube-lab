## Argo Configs
configs:
  # General Argo CD configuration
  params:
    ## Server properties
    # -- Run server without TLS
    server.insecure: true

  cm:
    # -- Timeout to discover if a new manifests version got published to the repository
    timeout.reconciliation: 30s
    # -- Timeout to refresh application data as well as target manifests cache
    timeout.hard.reconciliation: 30s
    
    # This is to make Sync Waves work in the App of Apps pattern (https://argo-cd.readthedocs.io/en/stable/operator-manual/upgrading/1.7-1.8/#health-assessment-of-argoprojioapplication-crd-has-been-removed)
    resource.customizations.health.argoproj.io_Application: |
      hs = {}
      hs.status = "Progressing"
      hs.message = ""
      if obj.status ~= nil then
        if obj.status.health ~= nil then
          hs.status = obj.status.health.status
          if obj.status.health.message ~= nil then
            hs.message = obj.status.health.message
          end
        end
      end
      return hs

    # Integration with KubeVela. See: https://www.cncf.io/blog/2020/12/22/argocd-kubevela-gitops-with-developer-centric-experience/
    configManagementPlugins: |
      - name: vela
        init:
          command: ["sh", "-xc"]
          args: ["vela traits"]
        generate:
          command: ["sh", "-xc"]
          args: ["vela export"]

    accounts.backstage-service-account: apiKey, login
    accounts.frontend: apiKey, login
    accounts.backend: apiKey, login
    accounts.database: apiKey, login

  rbac:
    policy.csv: |
      g, backstage-service-account, role:readonly
      g, frontend, role:readonly
      g, backend, role:readonly
      g, database, role:readonly

  secret:
    # -- Bcrypt hashed admin password
    ## Argo expects the password in the secret to be bcrypt hashed. You can create this hash with
    ## `htpasswd -nbBC 10 "" $ARGO_PWD | tr -d ':\n' | sed 's/$2y/$2a/'`
    # argocdServerAdminPassword: '$2a$10$0vz/zfXVeaLyOZkGQO6tgO15gOSf6P.zCpsLvJ8slkrOQe.Wq42W.' # admin

    extra:
      ## Argo expects the password in the secret to be bcrypt hashed. You can create this hash with
      ## `htpasswd -nbBC 10 "" $ARGO_PWD | tr -d ':\n' | sed 's/$2y/$2a/'`
      # accounts.backstage-service-account.password: '$2a$10$dcoQrqTuhzk4VTLpehzmjOL29zSba8w/08rLGbiXiqbYGGEZMYJBu' # backstage
      accounts.frontend.password: '$2a$10$LldyQmOa7/KCtnB4uyeA4.lBXJScLWyUCmS5MSebZpPXgJXLE9bye' # frontend
      accounts.backend.password: '$2a$10$IaI7yXLoWiQ.XlzZmAUxFOhEWgK8Fm21bZ/vtUBufK9yZnt7EUsri' # backend
      accounts.database.password: '$2a$10$4NRIsDFel0OaYPy9bAgedeycShVrK2kTNUap4TzHoFm1bUpjuE/z2' # database

repoServer:
  env:
  - name: KUBECONFIG
    value: /home/argocd/.kube/config
  initContainers:
  - name: download-tools
    image: oamdev/argo-tool:v1
    command: [sh, -c]
    args:
    - cp /app/vela /custom-tools/vela
    volumeMounts:
    - mountPath: /custom-tools
      name: custom-tools
  volumes:
  - name: custom-tools
    emptyDir: {}
  - name: vela-kubeconfig
    configMap:
      name: vela-kubeconfig